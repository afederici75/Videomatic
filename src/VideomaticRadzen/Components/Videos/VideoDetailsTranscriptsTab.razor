@using Application.Features.Transcripts;

@if (TranscriptList is null)
    return;

@foreach (var t in TranscriptList)
{
    <RadzenRow>
        Transcript
        <RadzenText Text="@(" (" + t.Key.Language  + ")")"></RadzenText>

        <RadzenTextArea Style="min-width: 100%" Rows="15" Value="@t.Value" />
    </RadzenRow>
}

@code {
    [Parameter]
    public required IEnumerable<TranscriptDTO> Transcripts { get; set; }

    IDictionary<TranscriptDTO, string>? TranscriptList;

    public string FullTranscriptText { get; set; } = string.Empty;

    public string GetFullTranscriptText(TranscriptDTO transcript)
    {
        if ((transcript.Lines == null) || !transcript.Lines.Any())
            return string.Empty;

        var texts = transcript.Lines.Select(lne => 
            $"{lne.StartsAt?.ToString(@"hh\:mm\:ss") ?? ""} {lne.Duration?.ToString(@"hh\:mm\:ss") ?? ""} {lne.Text}");

        return string.Join("\n", texts);
    }

    protected override void OnInitialized()
    {
        TranscriptList = new Dictionary<TranscriptDTO, string>();
        foreach (var t in Transcripts)
        {
            TranscriptList.Add(t, GetFullTranscriptText(t));
        }

        base.OnInitialized();
    }
}