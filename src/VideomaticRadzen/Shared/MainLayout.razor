@inherits LayoutComponentBase

@inject ISender Sender
@inject NavigationManager NavManager

<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenLayout Style="grid-template-columns: auto 1fr auto; grid-template-areas: 'rz-header rz-header rz-header' 'rz-sidebar rz-body rz-right-sidebar'">
    <RadzenHeader>
        <RadzenRow>
            <!-- Logo and sandwich button top left-->
            <RadzenColumn>
                <RadzenStack Orientation="Orientation.Horizontal" 
                             AlignItems="AlignItems.Center" 
                             Gap="0">
                    <RadzenSidebarToggle Click="@SidebarToggleClick" />
                    
                    <RadzenImage   />
                        <RadzenLink Path="" Text="Go to url" target="_blank">
                            <RadzenImage Path="images/Banner.png"
                                         Style="width: 100%">
                            </RadzenImage>
                        </RadzenLink>
                    
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn>
                <!-- User icon top right-->
                <RadzenStack Orientation="Orientation.Horizontal" 
                             AlignItems="AlignItems.Center" 
                             JustifyContent="JustifyContent.End" Gap="0">                    
                    <RadzenIcon Icon="person" style="width:48px; height: 48px" sour />
                </RadzenStack>            
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>

    <!-- Menu Items -->
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu Multiple=true>
            <RadzenPanelMenuItem Text="Dashboard" Icon="dashboard" Path="dashboard"/>
            
            <RadzenPanelMenuItem Text="Playlists" Icon="video_library" Path="Playlists" Expanded=true>
            <RadzenPanelMenuItem Style="color: gray" Text="All Videos" Path="Videos?all" Icon="density_small" />
            <RadzenPanelMenuItem Style="color: gray" Text="Starred" Icon="star" />
            <RadzenPanelMenuItem Style="color: gray" Text="History" Icon="history" />

            @foreach (var playlist in playlists ?? Array.Empty<PlaylistDTO>())
            {
                <RadzenPanelMenuItem Text="@(playlist.Name + " (" + playlist.VideoCount + ")")" Icon="video_library"
                                     Path="@($"Videos?PlaylistId={playlist.Id}")" />
            }                
            </RadzenPanelMenuItem>
              
        </RadzenPanelMenu>

        <RadzenPanelMenu Multiple=false>
            <RadzenPanelMenuItem Text="You Tube" Image="https://www.youtube.com/favicon.ico" 
                                Style="color: deepskyblue"
                                 Path="youtubeimport" />

            <RadzenPanelMenuItem Text="Google Drive" Image="https://ssl.gstatic.com/images/branding/product/1x/drive_2020q4_32dp.png"
                                 Style="color: deepskyblue">                
            </RadzenPanelMenuItem>
            
            <RadzenPanelMenuItem Text="Vimeo" 
                                 Image="https://vimeo.com/favicon.ico"
                                 Style="color: deepskyblue">
            </RadzenPanelMenuItem>

            

        </RadzenPanelMenu>
    </RadzenSidebar>

    <!-- Body -->
    <RadzenBody Style="padding: 0" >
        @Body        
    </RadzenBody>    
</RadzenLayout>

@code
{
    public IEnumerable<PlaylistDTO>? playlists { get; set; }

    void OnPlaylistClick(long playlistId)
    {
        NavManager.NavigateTo($"Videos?PlaylistId={playlistId}", true);
    }

    override protected async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var msg = new GetPlaylistsQuery(
            SearchText: null,
            OrderBy: null,
            Skip: 0,
            Take: 1024
        );

        Page<PlaylistDTO> response = await Sender.Send(msg);
        playlists = response.Items;
    }
}