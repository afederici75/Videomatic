@page "/PlaylistDetails/{PlaylistId:int?}"
@using VideomaticRadzen.Components.Playlists
@inject ISender Sender

@if (playlist == null)
{
    return;
}

<RadzenRow>
    <RadzenColumn>
        <PlaylistDetailHeader Playlist="@playlist" />
    </RadzenColumn>
</RadzenRow>

<RadzenRow>
    <Videos PlaylistId="@PlaylistId" />
</RadzenRow>

@code {
    bool isLoading = false;
    PlaylistDTO? playlist;

    [Parameter]
    public int? PlaylistId { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if ((PlaylistId != null) && (playlist == null))
            await GetPlaylist();

        await base.OnParametersSetAsync();
    }

    async Task GetPlaylist()
    {
        isLoading = true;

        await Task.Yield();

        var query = new GetPlaylistsQuery(
                PlaylistIds: new int[] { PlaylistId!.Value });
        //SelectedThumbnail: ThumbnailResolutionDTO.Standard);

        Page<PlaylistDTO> results = await Sender.Send(query);

        playlist = results.Items.SingleOrDefault();
        if (playlist != null)
        {
            
        }

        isLoading = false;
    }
}
