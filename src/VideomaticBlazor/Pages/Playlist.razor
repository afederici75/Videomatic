@page "/Playlist/{PlaylistId:long}"
@using Company.Videomatic.Application.Features.Videos;
@using VideomaticBlazor.Events;

<Row class="sticky-top">
    <Column Background="Background.Dark">
        <TopSearch OnStartSearch="OnStartSearch"/>
    </Column>
</Row>
    @foreach (var video in Videos)
    {
        <VideoCard Video=video GridMode=true/>        
    }           


@code {
    VideoDTO[] Videos = Array.Empty<VideoDTO>();    

    [Parameter]
    public long PlaylistId { get; set; } = 0;

    [Inject]
    public ISender Sender { get; set; } 

    List<string> EventType = new List<string>();

    protected override async Task OnParametersSetAsync()
    {
        await OnStartSearch(string.Empty);
    }

    public async Task OnStartSearch(string searchText)
    {
        var query = new GetVideosQuery(
                PlaylistIds: new[] { PlaylistId },
                SearchText: searchText,
                IncludeTags: true,
                IncludeThumbnail: ThumbnailResolutionDTO.Medium);

        Page<VideoDTO> results = await Sender.Send(query);

        Videos = results.Items.ToArray();
    }
}