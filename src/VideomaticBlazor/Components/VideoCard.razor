@using Company.Videomatic.Application.Features.Videos;
@inject NavigationManager Navigation

<Card Margin="Margin.Is2.FromTop">
    <CardHeader>@Video.Name</CardHeader>

    <CardBody>  
        <Row>
            <Column>
                <CardImage style="max-height: 200px; max-width: 320px" Source=@Video.Thumbnail Alt="@Video.Name" />
            </Column>
            <Column>
                <CardTitle Size="2">@Video.Name</CardTitle>
                <CardSubtitle Size="6" TextWeight="TextWeight.Light">@TruncateDescription(Video.Description)</CardSubtitle>
                <Div>
                    <Badge Color="Color.Primary">@(Video.Tags?.Count() ?? 0) Tags</Badge>

                    @*<Badge Color="Color.Info">@Video.PlaylistCount Playlists</Badge>
                    <Badge Color="Color.Success">@Video.TagCount Tags</Badge>
                    <Badge Color="Color.Success">@Video.ArtifactCount Artifacts</Badge>
                    <Badge Color="Color.Secondary">@Video.ThumbnailCount Thumbnails</Badge>
                    <Badge Color="Color.Success">@Video.TranscriptCount Transcripts</Badge>*@
                </Div>
            </Column>
        </Row>
        <Row>
            <Column>                
                
                <CardText>

                </CardText>
                
            </Column>
        </Row>
        

        
        <Button Color="Color.Primary" Margin="Margin.Is2.FromTop" Type="ButtonType.Link" 
                To="@Video.Location" Target="Target.Blank">
                Watch</Button>

        <Button Color="Color.Primary" Margin="Margin.Is2.FromTop" @onclick=OnEditClicked>
            Read more <Icon Name="IconName.ArrowRight" /></Button>                        
        
    </CardBody>
</Card>

@code {
    [Parameter]
    public VideoDTO Video { get; set; } = new(1, "Nowhere", "No Title", "No Description");

    [Parameter]
    public bool GridMode { get; set; } = false;

    public string MaxWidthStyle => GridMode ? "max-width: 800px" : "max-width: 800px";

    string? TruncateDescription(string? description, int maxLength = 100)
    {
        if (!GridMode)
            return description;

        if ((description == null) || (description.Length <= maxLength))
        {
            return description;
        }

        return description.Substring(0, maxLength);
    }

    void OnEditClicked()
    {
        Navigation.NavigateTo($"/{nameof(VideoEdit)}/{Video.Id}");        
    }
}
    